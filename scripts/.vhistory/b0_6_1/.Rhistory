## library
library(mvtnorm)
## modules
source("f_HBM_v0_6.r")
## load dataset
load("data/dataset_lake_stream_v0_1.rda")
data = dataset_lake_stream
## path to out
pto = "out_mTL"
system(paste("mkdir ",pto,sep=""))
## response
response = "Max. Troph. Level"
#
## split function
split_ = function(x,n) split(x,ceiling(seq_along(x)/n))
## std function
std = function(x) (x-mean(x,na.rm=T))/sd(x,na.rm=T)
## convert string to integer
stringToInteger = function(string)
{
tmp = 1:length(unique(string))
names(tmp) = unique(string)
tmp = tmp[string]
return(tmp)
}
## sigmoid function
sigmoid = function(x) 1/(1+exp(-x))
logit   = function(x) log(x/(1-x))
#
which(is.na(data$CdBH))
s    = which(is.na(data$CdBH))
data = data[-s,]
data
## response variable
Y      = std(data$max_troph_lvl)
# Y      = std(data$connectance)
n_data = length(Y)
n_data
## means and stds
temp_mean = mean(data$temp,na.rm=T)
temp_sd   = sd(data$temp,na.rm=T)
dbo_mean  = mean(data$dbo,na.rm=T)
dbo_sd    = sd(data$dbo,na.rm=T)
Y_mean    = mean(data$max_troph_lvl,na.rm=T)
Y_sd      = sd(data$max_troph_lvl,na.rm=T)
## explanatory variables
type    = (data$type == "lake")*1
temp    = std(data$temp)
dbo     = std(data$dbo)
rich    = std(data$richness)
year    = std(data$year)
alt     = std(data$altitude)
long    = std(data$long)
latt    = std(data$lat)
locat   = stringToInteger(data$CdBH)
sum(type)
sum(1-type)
## matrix of explanatory variables
X_obs   =                 cbind(1, type,temp,temp^2,temp*type,dbo,dbo^2,type*dbo,temp*dbo,temp*dbo*type,rich,alt,year)
X_mis_l =                 cbind(1, type,temp,temp^2,temp*type,  1,    1,type*  1,temp*  1,temp*  1*type,rich,alt,year)
X_mis_r = function(x)     cbind(1,    1,   1,     1,        1,  x,  x^2,      x,       x,            x,   1,  1,  1)
X_pred  = function(x,y,i) cbind(1,(i-1),   x,   x^2,  x*(i-1),  y,  y^2,y*(i-1),     x*y,    x*y*(i-1),   0,  0,  0)
n_beta  = ncol(X_obs)
colnames(X_obs) = c("1","type","temp","temp^2","temp*type","dbo","dbo^2","type*dbo","temp*dbo","temp*dbo*type","rich","alt","year")
## missing values
idx_mis = which(is.na(dbo))
n_mis   = length(idx_mis)
n_mis
## splitting data into observed and missing
Y_obs   = Y[-idx_mis]
X_obs   = X_obs[-idx_mis,]
Y_mis   = Y[idx_mis]
X_mis_l   = X_mis_l[idx_mis,]
## compute distance matrix
x_ = long
y_ = latt
DM = matrix(rep(0,length(x_)^2),ncol=length(x_),nrow=length(x_))
for(i in 1:length(x_))
{
for(j in 1:length(y_))
{
DM[i,j] = sqrt((x_[i] - x_[j])^2 + (y_[i] - y_[j])^2)
}
}
DM = rbind(DM[-idx_mis,],DM[idx_mis,])
DM = cbind(DM[,-idx_mis],DM[,idx_mis])
## uneven variances (random effects)
n_sd_lik   = length(unique(locat))
idx_sd_lik = c(locat[-idx_mis],locat[idx_mis])
n_sd_lik
